#! /usr/bin/env ruby

def debug(info)
  puts "DEBUG: #{info.is_a?(String) ? info : info.inspect}"
end

ram_source = '/Volumes/RamDisk/sr'
ext_source = '/Volumes/RamDisk/new'
#hd_source = '/Users/chenronghua/workspace/scarecrow-rules' 
hd_source = '/Users/chenronghua/workspace/front' 

source = ARGV[0]
source = ram_source if source == 'ram'
source = ext_source if source == 'ext'
source = hd_source if source == 'hd'

Dir.chdir(source)
debug "git repo: #{source}"

def readSHA(target, sha, type=nil)

  type = type || `git cat-file -t #{sha}`.chomp
  debug "target:#{target}, sha: #{sha}, type: #{type}"

  if type == 'commit'
    commit = `git cat-file -p #{sha}`
    tree = commit.split(/\s+/)[1]
    return readSHA(target, tree, 'tree')
  elsif type == 'tree'
    tree = `git ls-tree #{sha} #{target}`
    raise RuntimeError.new("no object found for #{target}") if tree.empty?
    # tree
    return tree if tree.split(/\n/).length > 1
    # blob
    info = tree.split(/\s+/)
    return readSHA(nil, info[2], info[1])
    raise RuntimeError.new("no object found for #{t}")
  elsif type == 'blob'
    return `git cat-file -p #{sha}`
  end
end


sha = ARGV[1]
target = ARGV[2]

start_time = Time.now.to_f

puts readSHA(target, sha)


end_time = Time.now.to_f

debug "finished in #{end_time - start_time} seconds"
